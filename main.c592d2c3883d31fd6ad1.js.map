{"version":3,"file":"main.c592d2c3883d31fd6ad1.js","mappings":"mBAGO,SAASA,EAAUC,GACxBA,EAAaC,UAAUC,IAAI,qBAC3BC,WAAW,WACTH,EAAaC,UAAUC,IAAI,kBAC7B,EAAG,GACHE,SAASC,iBAAiB,UAAWC,GACrCN,EAAaK,iBAAiB,YAAaE,EAC7C,CAGO,SAASC,EAAWR,GACzBA,EAAaC,UAAUQ,OAAO,mBAE9BN,WAAW,WACTH,EAAaC,UAAUQ,OAAO,oBAChC,EAAG,KACHL,SAASM,oBAAoB,UAAWJ,GACxCN,EAAaU,oBAAoB,YAAaH,EAChD,CAGA,SAASD,EAAYK,GACnB,GAAkB,WAAdA,EAAMC,IAAkB,CAC1B,IAAMC,EAAcT,SAASU,cAAc,oBACvCD,GAAaL,EAAWK,EAC9B,CACF,CAGA,SAASN,EAAeI,GAClBA,EAAMI,OAAOd,UAAUe,SAAS,oBAClCR,EAAWG,EAAMI,OAErB,CCnCA,IAAME,EAAsBb,SACzBU,cAAc,kBACdI,QAAQJ,cAAc,SAElB,SAASK,EACdC,EAAIC,GAEJ,IADEC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAAQC,EAAYH,EAAZG,aAAcC,EAAaJ,EAAbI,cAE5BC,EAAcT,EAAoBU,WAAU,GAC5CC,EAAeF,EAAYZ,cAAc,gBACzCe,EAAeH,EAAYZ,cAAc,gBACzCgB,EAAaJ,EAAYZ,cAAc,sBACvCiB,EAAYL,EAAYZ,cAAc,qBACtCkB,EAAeN,EAAYZ,cAAc,wBAkC/C,OAhCAe,EAAaI,YAAcb,EAAKc,KAChCN,EAAaO,IAAMf,EAAKgB,KACxBR,EAAaS,IAAMjB,EAAKc,KAGxBH,EAAUE,YAAcb,EAAKkB,MAAMC,OAGnBnB,EAAKkB,MAAME,KAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQjB,CAAa,IAElEK,EAAW7B,UAAUC,IAAI,+BAItBkB,EAAKuB,OAASvB,EAAKuB,MAAMD,MAAQjB,EAGpCO,EAAa3B,iBAAiB,QAAS,kBACrCiB,EAASI,EAAaN,EAAKsB,IAAI,GAHjCV,EAAaY,MAAMC,QAAU,OAO/Bf,EAAWzB,iBAAiB,QAAS,kBACnCkB,EACEH,EAAKsB,IACLZ,EACAC,EACAD,EAAW7B,UAAUe,SAAS,+BAC/B,GAEHY,EAAavB,iBAAiB,QAAS,kBAAMmB,EAAaJ,EAAK,GAExDM,CACT,CCjDO,IAAMoB,EAAqB,CAChCC,aAAc,eACdC,cAAe,gBACfC,qBAAsB,iBACtBC,oBAAqB,yBACrBC,gBAAiB,0BACjBC,WAAY,wBAiBRC,EAAiB,SAACC,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAYxC,cAAc,IAAD4C,OAAKH,EAAaI,GAAE,WAClEJ,EAAatD,UAAUQ,OAAO+C,EAAiBL,iBAC/CM,EAAaxD,UAAUQ,OAAO+C,EAAiBJ,YAC/CK,EAAaxB,YAAc,EAC7B,EA6BM2B,EAAoB,SAACC,EAAWC,EAAeN,GACnD,IAAMO,EAAkBF,EAAUrB,KAChC,SAACe,GAAY,OAAMA,EAAaS,SAASC,KAAK,GAEhDH,EAAcI,SAAWH,EACzBD,EAAc7D,UAAUkE,OACtBX,EAAiBN,oBACjBa,EAEJ,EAsBMK,EAAkB,SAACd,EAAaE,GACpC,IAAMK,EAAYQ,MAAMC,KACtBhB,EAAYiB,iBAAiBf,EAAiBR,gBAE1Cc,EAAgBR,EAAYxC,cAChC0C,EAAiBP,sBAGnBY,EAAUW,QAAQ,SAACjB,GACjBF,EAAeC,EAAaC,EAAcC,EAC5C,GAEAI,EAAkBC,EAAWC,EAAeN,EAC9C,ECpGA,SAASiB,EAAcC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,WAADpB,OAAYgB,EAAIK,QACvC,C,kqBCJA,IACMC,EDOG,SAAiBC,EAAUC,GAChC,OAAOC,MCTK,kDDSWF,EAAUC,GAASE,KAAKX,EACjD,EC2DF,QAPY,IA3DH,WAGN,O,EAFD,SAAAY,EAAAhE,GAAyB,IAAXiE,EAAOjE,EAAPiE,S,4FAAOC,CAAA,KAAAF,GACnBG,KAAKC,SAAWH,CAClB,G,EAAC,EAAA1E,IAAA,cAAA8E,MAED,WACE,OAAOV,EAAQ,YAAa,CAAEM,QAASE,KAAKC,UAC9C,GAAC,CAAA7E,IAAA,kBAAA8E,MAED,WACE,OAAOV,EAAQ,SAAU,CAAEM,QAASE,KAAKC,UAC3C,GAAC,CAAA7E,IAAA,iBAAA8E,MAED,SAAcC,GAAkB,IAAfzD,EAAIyD,EAAJzD,KAAM0D,EAAKD,EAALC,MACrB,OAAOZ,EAAQ,YAAa,CAC1Ba,OAAQ,QACRP,QAASE,KAAKC,SACdK,KAAMC,KAAKC,UAAU,CAAE9D,KAAAA,EAAM0D,MAAAA,KAEjC,GAAC,CAAAhF,IAAA,UAAA8E,MAED,SAAOO,GAAiB,IAAd/D,EAAI+D,EAAJ/D,KAAME,EAAI6D,EAAJ7D,KACd,OAAO4C,EAAQ,SAAU,CACvBa,OAAQ,OACRP,QAASE,KAAKC,SACdK,KAAMC,KAAKC,UAAU,CAAE9D,KAAAA,EAAME,KAAAA,KAEjC,GAAC,CAAAxB,IAAA,aAAA8E,MAED,SAAWQ,GACT,OAAOlB,EAAQ,UAADtB,OAAWwC,GAAU,CACjCL,OAAQ,SACRP,QAASE,KAAKC,UAElB,GAAC,CAAA7E,IAAA,WAAA8E,MAED,SAASQ,GACP,OAAOlB,EAAQ,gBAADtB,OAAiBwC,GAAU,CACvCL,OAAQ,MACRP,QAASE,KAAKC,UAElB,GAAC,CAAA7E,IAAA,aAAA8E,MAED,SAAWQ,GACT,OAAOlB,EAAQ,gBAADtB,OAAiBwC,GAAU,CACvCL,OAAQ,SACRP,QAASE,KAAKC,UAElB,GAAC,CAAA7E,IAAA,eAAA8E,MAED,SAAYS,GAAa,IAAVC,EAAMD,EAANC,OACb,OAAOpB,EAAQ,mBAAoB,CACjCa,OAAQ,QACRP,QAASE,KAAKC,SACdK,KAAMC,KAAKC,UAAU,CAAEI,OAAAA,KAE3B,M,6EAAC,CAxDM,GA2DG,CAAQ,CAClBd,QAAS,CACPe,cAAe,uCACf,eAAgB,sBClEb,SAASC,EACdC,EACAC,GAGA,IAFAC,EAAUC,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAG,YACbE,EAAWF,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAG,gBAEdF,EAAOvE,YAAcsE,EAAYK,EAAcH,CACjD,CAGO,SAASI,EAAa7B,EAAS8B,GAAoC,IAA/BF,EAAWF,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAG,gBACvDI,EAAIC,iBACJ,IAAMC,EAAeF,EAAIG,UACnBC,EAAcF,EAAa/E,YACjCqE,GAAc,EAAMU,EAAcE,EAAaN,GAC/C5B,IACGI,KAAK,WACJ0B,EAAI/F,OAAOoG,OACb,GACCC,MAAMC,QAAQC,OACdC,QAAQ,WACPjB,GAAc,EAAOU,EAAcE,EACrC,EACJ,CAGO,SAASM,EAAWC,EAAMC,EAAWC,GAA+B,IAApB9B,EAAMa,UAAAnE,OAAA,QAAAoE,IAAAD,UAAA,GAAAA,UAAA,GAAG,UACxDhF,EAAcgG,EAAUvG,WAAWsG,EAAMC,GAC/CC,EAAU9B,GAAQnE,EACpB,C,sGCdA,IAAMkG,EAAoBxH,SAASU,cAAc,yBAC3C+G,EAAmBzH,SAASU,cAAc,oBAC1CgH,EAAkB1H,SAAS2H,MAAM,gBACjCC,EAAYF,EAAgBG,SAAe,KAC3CC,EAAWJ,EAAgBG,SAAsB,YACjDE,EAAc/H,SAASU,cAAc,mBACrCsH,EAAahI,SAASU,cAAc,yBAEpCuH,EAAgBjI,SAASU,cAAc,wBACvCwH,EAAelI,SAASU,cAAc,wBACtCyH,EAAcnI,SAAS2H,MAAM,aAE7BS,EAAapI,SAASU,cAAc,qBACpC2H,EAAeD,EAAW1H,cAAc,iBACxC4H,EAAeF,EAAW1H,cAAc,mBAExC6H,EAAiBvI,SAASU,cAAc,iBAE9CV,SAASmE,iBAAiB,iBAAiBC,QAAQ,SAACoE,GAClD,IAAMC,EAAQD,EAAIE,QAAQ,UAC1BF,EAAIvI,iBAAiB,QAAS,kBAAMG,EAAWqI,EAAM,EACvD,GAgBAR,EAAchI,iBAAiB,QAAS,WACtCkI,EAAYpB,QACZ/C,EAAgBmE,EAAazF,GAC7B/C,EAAUuI,EACZ,GAiCA,IJc0B9E,EIdtB/B,EAAgB,KAChBsH,EAAe,KAEnB,SAASC,EAAW9C,EAAQpE,EAAYC,EAAWkH,IAC/BA,EAAUC,EAAIC,WAAaD,EAAIE,UAE9CC,KAAKH,EAAKhD,GACVd,KAAK,SAACkE,GACLxH,EAAW7B,UAAUkE,OACnB,8BACAmF,EAAYhH,MAAME,KAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQjB,CAAa,IAE7DM,EAAUE,YAAcqH,EAAYhH,MAAMC,MAC5C,GACC6E,MAAMC,QAAQC,MACnB,CAEAzC,QAAQ0E,IAAI,CAACL,EAAIM,cAAeN,EAAIO,oBACjCrE,KAAK,SAAAO,GAAuB,I,IAAAM,G,EAAA,E,4CAAAN,I,s1BAArB+D,EAAQzD,EAAA,GAAE0D,EAAK1D,EAAA,GACrBxE,EAAgBiI,EAAShH,IACzByF,EAAYlG,YAAcyH,EAASxH,KACnCkG,EAAWnG,YAAcyH,EAAS9D,MAClCgE,EAAahH,MAAMiH,gBAAkB,QAAHnG,OAAWgG,EAAStD,OAAM,MAC5DuD,EAAMnF,QAAQ,SAACsF,GACbtC,EACEsC,EACA,CACE3I,WAAAA,EACAG,SAAU,SAACI,EAAawE,GACtB6C,EAAe,CAAErH,YAAAA,EAAawE,OAAAA,GAC9BnG,EAAUgK,EACZ,EACAxI,OAAQyH,EACRxH,aAAc,SAAF2E,GAAsB,IAAjBjE,EAAIiE,EAAJjE,KAAME,EAAI+D,EAAJ/D,KACrBqG,EAAatG,IAAMC,EACnBqG,EAAapG,IAAMH,EACnBwG,EAAazG,YAAcC,EAC3BnC,EAAUyI,EACZ,EACA/G,cAAAA,GAEFkH,EACA,SAEJ,EACF,GACCvB,MAAMC,QAAQC,OAEjBM,EAAkBvH,iBAAiB,QAAS,WAC1C2H,EAAUtC,MAAQyC,EAAYlG,YAC9BiG,EAASxC,MAAQ0C,EAAWnG,YAC5BmC,EAAgB0D,EAAiBhF,GACjC/C,EAAU8H,EACZ,GAEAC,EAAgBzH,iBAAiB,SAzGjC,SAAiCyG,GAU/BD,EATA,WACE,OAAOqC,EACJc,eAAe,CAAE9H,KAAM8F,EAAUtC,MAAOE,MAAOsC,EAASxC,QACxDN,KAAK,SAACsE,GACLvB,EAAYlG,YAAcyH,EAASxH,KACnCkG,EAAWnG,YAAcyH,EAAS9D,MAClCpF,EAAWqH,EACb,EACJ,EAC0Bf,EAC5B,GA+FAyB,EAAYlI,iBAAiB,SAvF7B,SAA6ByG,GA4B3BD,EA3BA,WACE,IAAM3E,EAAOqG,EAAYN,SAAS,cAAcvC,MAC1CtD,EAAOmG,EAAYN,SAAe,KAAEvC,MAC1C,OAAOwD,EAAIe,QAAQ,CAAE/H,KAAAA,EAAME,KAAAA,IAAQgD,KAAK,SAAC0E,GACvCtC,EACEsC,EACA,CACE3I,WAAAA,EACAG,SAAU,SAACI,EAAawE,GACtB6C,EAAe,CAAErH,YAAAA,EAAawE,OAAAA,GAC9BnG,EAAUgK,EACZ,EACAxI,OAAQyH,EACRxH,aAAc,SAAFH,GAAsB,IAAjBa,EAAIb,EAAJa,KAAME,EAAIf,EAAJe,KACrBqG,EAAatG,IAAMC,EACnBqG,EAAapG,IAAMH,EACnBwG,EAAazG,YAAcC,EAC3BnC,EAAUyI,EACZ,EACA/G,cAAAA,GAEFkH,EACA,WAEFnI,EAAW8H,EACb,EACF,EAC0BxB,EAC5B,GJgB0BtD,EI4CTV,EJ3CEuB,MAAMC,KACrBlE,SAASmE,iBAAiBf,EAAiBT,eAEpCyB,QAAQ,SAAClB,IAvCM,SAACA,EAAaE,GACtC,IAAMK,EAAYQ,MAAMC,KACtBhB,EAAYiB,iBAAiBf,EAAiBR,gBAE1Cc,EAAgBR,EAAYxC,cAChC0C,EAAiBP,sBAGnBW,EAAkBC,EAAWC,EAAeN,GAE5CK,EAAUW,QAAQ,SAACjB,GACjBA,EAAalD,iBAAiB,QAAS,YAjDhB,SAACiD,EAAaC,EAAcC,GACjDD,EAAaS,SAASkG,gBACxB3G,EAAa4G,kBAAkB5G,EAAa6G,QAAQC,cAEpD9G,EAAa4G,kBAAkB,IAG5B5G,EAAaS,SAASC,MAQzBZ,EAAeC,EAAaC,EAAcC,GApCvB,SACrBF,EACAC,EACA8G,EACA7G,GAEA,IAAMC,EAAeH,EAAYxC,cAAc,IAAD4C,OAAKH,EAAaI,GAAE,WAClEJ,EAAatD,UAAUC,IAAIsD,EAAiBL,iBAC5CM,EAAaxB,YAAcoI,EAC3B5G,EAAaxD,UAAUC,IAAIsD,EAAiBJ,WAC9C,CAmBIkH,CACEhH,EACAC,EACAA,EAAagH,kBACb/G,EAKN,CAiCMgH,CAAmBlH,EAAaC,EAAcC,GAC9CI,EAAkBC,EAAWC,EAAeN,EAC9C,EACF,EACF,CAwBIiH,CAAkBnH,EAAaE,EACjC,GIwCF,IAAMuG,EAAkB3J,SAASU,cAAc,2BACzC4J,EAAsBX,aAAe,EAAfA,EAAiBjJ,cAAc,kBAEvD4J,GACFA,EAAoBrK,iBAAiB,QAAS,WACxC0I,GACFG,EACGyB,WAAW5B,EAAa7C,QACxBd,KAAK,WACJ2D,EAAarH,YAAYjB,SACzBD,EAAWuJ,GACXhB,EAAe,IACjB,GACC3B,MAAMC,QAAQC,MAErB,GAGF,IAAMsD,EAAcxK,SAASU,cAAc,2BACrC+J,EAAazK,SAAS2H,MAAM,eAC5B+C,EAAcD,EAAW5C,SAAiB,OAC1C2B,EAAexJ,SAASU,cAAc,mBAE5C8I,EAAavJ,iBAAiB,QAAS,WACrCwK,EAAW1D,QACX/C,EAAgByG,EAAY/H,GAC5B/C,EAAU6K,EACZ,GAWAC,EAAWxK,iBAAiB,SAT5B,SAAgCyG,GAO9BD,EANA,WACE,OAAOqC,EAAI6B,aAAa,CAAE3E,OAAQ0E,EAAYpF,QAASN,KAAK,SAACsE,GAC3DE,EAAahH,MAAMiH,gBAAkB,QAAHnG,OAAWgG,EAAStD,OAAM,MAC5D5F,EAAWoK,EACb,EACF,EAC0B9D,EAC5B,E","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/utils/request.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/utils/utils.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// Функции для работы с модальными окнами\n\n// Открывает попап и навешивает слушатели Esc, overlay, крестик\nexport function openModal(popupElement) {\n  popupElement.classList.add(\"popup_is-animated\"); // сначала анимация\n  setTimeout(() => {\n    popupElement.classList.add(\"popup_is-opened\"); // потом только открытие\n  }, 1);\n  document.addEventListener(\"keydown\", onEscapeKey);\n  popupElement.addEventListener(\"mousedown\", onOverlayClick);\n}\n\n// Закрывает попап и снимает слушатели\nexport function closeModal(popupElement) {\n  popupElement.classList.remove(\"popup_is-opened\");\n  // Ждём окончания анимации, затем убираем анимационный класс\n  setTimeout(() => {\n    popupElement.classList.remove(\"popup_is-animated\");\n  }, 600); // 600ms — как в transition в CSS\n  document.removeEventListener(\"keydown\", onEscapeKey);\n  popupElement.removeEventListener(\"mousedown\", onOverlayClick);\n}\n\n// Обработчик Esc\nfunction onEscapeKey(event) {\n  if (event.key === \"Escape\") {\n    const activePopup = document.querySelector(\".popup_is-opened\");\n    if (activePopup) closeModal(activePopup);\n  }\n}\n\n// Обработчик клика по оверлею\nfunction onOverlayClick(event) {\n  if (event.target.classList.contains(\"popup_is-opened\")) {\n    closeModal(event.target);\n  }\n}","// Шаблон карточки ищем один раз\nconst cardTemplateElement = document\n  .querySelector(\"#card-template\")\n  .content.querySelector(\".card\");\n\nexport function createCard(\n  data,\n  { onDelete, onLike, onImageClick, currentUserId }\n) {\n  const cardElement = cardTemplateElement.cloneNode(true);\n  const imageElement = cardElement.querySelector(\".card__image\");\n  const titleElement = cardElement.querySelector(\".card__title\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCount = cardElement.querySelector(\".card__like-count\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n\n  titleElement.textContent = data.name;\n  imageElement.src = data.link;\n  imageElement.alt = data.name;\n\n  // Показываем количество лайков\n  likeCount.textContent = data.likes.length;\n\n  // Отображаем активный лайк, если пользователь уже лайкнул\n  const isLiked = data.likes.some((user) => user._id === currentUserId);\n  if (isLiked) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  // Показываем корзину только на своих карточках\n  if (!data.owner || data.owner._id !== currentUserId) {\n    deleteButton.style.display = \"none\";\n  } else {\n    deleteButton.addEventListener(\"click\", () =>\n      onDelete(cardElement, data._id)\n    );\n  }\n\n  likeButton.addEventListener(\"click\", () =>\n    onLike(\n      data._id,\n      likeButton,\n      likeCount,\n      likeButton.classList.contains(\"card__like-button_is-active\")\n    )\n  );\n  imageElement.addEventListener(\"click\", () => onImageClick(data));\n\n  return cardElement;\n}\n\nexport function deleteCard(cardElement) {\n  cardElement.remove();\n}\n\nexport function toggleCardLike(likeButton) {\n  likeButton.classList.toggle(\"card__like-button_is-active\");\n}","export const validationSettings = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\n// Функция показа ошибки\nconst showInputError = (\n  formElement,\n  inputElement,\n  errorMessage,\n  validationConfig\n) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\n\n// Функция скрытия ошибки\nconst hideInputError = (formElement, inputElement, validationConfig) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = \"\";\n};\n\n// Функция проверки валидности поля\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      validationConfig\n    );\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n};\n\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\n// Функция переключения состояния кнопки\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\n  const hasInvalidInput = inputList.some(\n    (inputElement) => !inputElement.validity.valid\n  );\n  buttonElement.disabled = hasInvalidInput;\n  buttonElement.classList.toggle(\n    validationConfig.inactiveButtonClass,\n    hasInvalidInput\n  );\n};\n\n// Функция установки слушателей событий\nconst setEventListeners = (formElement, validationConfig) => {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n\n  toggleButtonState(inputList, buttonElement, validationConfig);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", () => {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n};\n\n// Функция очистки ошибок валидации\nconst clearValidation = (formElement, validationConfig) => {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationConfig);\n  });\n\n  toggleButtonState(inputList, buttonElement, validationConfig);\n};\n\n// Функция включения валидации\nconst enableValidation = (validationConfig) => {\n  const formList = Array.from(\n    document.querySelectorAll(validationConfig.formSelector)\n  );\n  formList.forEach((formElement) => {\n    setEventListeners(formElement, validationConfig);\n  });\n};\n\nexport { enableValidation, clearValidation };","// Обработка ответа от fetch\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n// Функция для создания универсального запроса с базовым URL\nexport function createRequest(baseUrl) {\n  return function request(endpoint, options) {\n    return fetch(baseUrl + endpoint, options).then(checkResponse);\n  };\n}","import { createRequest } from \"../utils/request.js\";\n\nconst baseUrl = \"https://mesto.nomoreparties.co/v1/wff-cohort-41\";\nconst request = createRequest(baseUrl);\n\nclass Api {\n  constructor({ headers }) {\n    this._headers = headers;\n  }\n\n  getUserInfo() {\n    return request(\"/users/me\", { headers: this._headers });\n  }\n\n  getInitialCards() {\n    return request(\"/cards\", { headers: this._headers });\n  }\n\n  updateUserInfo({ name, about }) {\n    return request(\"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ name, about }),\n    });\n  }\n\n  addCard({ name, link }) {\n    return request(\"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name, link }),\n    });\n  }\n\n  deleteCard(cardId) {\n    return request(`/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    });\n  }\n\n  likeCard(cardId) {\n    return request(`/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    });\n  }\n\n  unlikeCard(cardId) {\n    return request(`/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    });\n  }\n\n  updateAvatar({ avatar }) {\n    return request(\"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ avatar }),\n    });\n  }\n}\n\nconst api = new Api({\n  headers: {\n    authorization: \"9b711e70-0272-4e5c-944b-5407ffffd0b3\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n","// Универсальная функция управления текстом кнопки\nexport function renderLoading(\n  isLoading,\n  button,\n  buttonText = \"Сохранить\",\n  loadingText = \"Сохранение...\"\n) {\n  button.textContent = isLoading ? loadingText : buttonText;\n}\n\n// Универсальная функция обработки сабмита формы\nexport function handleSubmit(request, evt, loadingText = \"Сохранение...\") {\n  evt.preventDefault();\n  const submitButton = evt.submitter;\n  const initialText = submitButton.textContent;\n  renderLoading(true, submitButton, initialText, loadingText);\n  request()\n    .then(() => {\n      evt.target.reset();\n    })\n    .catch(console.error)\n    .finally(() => {\n      renderLoading(false, submitButton, initialText);\n    });\n}\n\n// Универсальная функция вставки карточки\nexport function renderCard(item, callbacks, container, method = \"prepend\") {\n  const cardElement = callbacks.createCard(item, callbacks);\n  container[method](cardElement);\n}","import \"./pages/index.css\";\nimport { openModal, closeModal } from \"./components/modal.js\";\nimport { createCard } from \"./components/card.js\";\nimport {\n  enableValidation,\n  clearValidation,\n  validationSettings,\n} from \"./components/validation.js\";\nimport api from \"./components/api.js\";\nimport {\n  renderLoading,\n  handleSubmit,\n  renderCard,\n} from \"./utils/utils.js\";\n\n// === DOM-элементы ===\nconst buttonEditProfile = document.querySelector(\".profile__edit-button\");\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\nconst formEditProfile = document.forms[\"edit-profile\"];\nconst inputName = formEditProfile.elements[\"name\"];\nconst inputJob = formEditProfile.elements[\"description\"];\nconst profileName = document.querySelector(\".profile__title\");\nconst profileJob = document.querySelector(\".profile__description\");\n\nconst buttonAddCard = document.querySelector(\".profile__add-button\");\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\nconst formAddCard = document.forms[\"new-place\"];\n\nconst popupImage = document.querySelector(\".popup_type_image\");\nconst popupImageEl = popupImage.querySelector(\".popup__image\");\nconst popupCaption = popupImage.querySelector(\".popup__caption\");\n\nconst cardsContainer = document.querySelector(\".places__list\");\n\ndocument.querySelectorAll(\".popup__close\").forEach((btn) => {\n  const popup = btn.closest(\".popup\");\n  btn.addEventListener(\"click\", () => closeModal(popup));\n});\n\n// Универсальный обработчик профиля\nfunction handleProfileFormSubmit(evt) {\n  function makeRequest() {\n    return api\n      .updateUserInfo({ name: inputName.value, about: inputJob.value })\n      .then((userData) => {\n        profileName.textContent = userData.name;\n        profileJob.textContent = userData.about;\n        closeModal(popupEditProfile);\n      });\n  }\n  handleSubmit(makeRequest, evt);\n}\n\nbuttonAddCard.addEventListener(\"click\", () => {\n  formAddCard.reset();\n  clearValidation(formAddCard, validationSettings);\n  openModal(popupAddCard);\n});\n\nfunction handleAddCardSubmit(evt) {\n  function makeRequest() {\n    const name = formAddCard.elements[\"place-name\"].value;\n    const link = formAddCard.elements[\"link\"].value;\n    return api.addCard({ name, link }).then((cardData) => {\n      renderCard(\n        cardData,\n        {\n          createCard,\n          onDelete: (cardElement, cardId) => {\n            cardToDelete = { cardElement, cardId };\n            openModal(popupDeleteCard);\n          },\n          onLike: handleLike,\n          onImageClick: ({ name, link }) => {\n            popupImageEl.src = link;\n            popupImageEl.alt = name;\n            popupCaption.textContent = name;\n            openModal(popupImage);\n          },\n          currentUserId,\n        },\n        cardsContainer,\n        \"prepend\"\n      );\n      closeModal(popupAddCard);\n    });\n  }\n  handleSubmit(makeRequest, evt);\n}\n\nlet currentUserId = null;\nlet cardToDelete = null;\n\nfunction handleLike(cardId, likeButton, likeCount, isLiked) {\n  const apiMethod = isLiked ? api.unlikeCard : api.likeCard;\n  apiMethod\n    .call(api, cardId)\n    .then((updatedCard) => {\n      likeButton.classList.toggle(\n        \"card__like-button_is-active\",\n        updatedCard.likes.some((user) => user._id === currentUserId)\n      );\n      likeCount.textContent = updatedCard.likes.length;\n    })\n    .catch(console.error);\n}\n\nPromise.all([api.getUserInfo(), api.getInitialCards()])\n  .then(([userData, cards]) => {\n    currentUserId = userData._id;\n    profileName.textContent = userData.name;\n    profileJob.textContent = userData.about;\n    profileImage.style.backgroundImage = `url('${userData.avatar}')`;\n    cards.forEach((cardData) => {\n      renderCard(\n        cardData,\n        {\n          createCard,\n          onDelete: (cardElement, cardId) => {\n            cardToDelete = { cardElement, cardId };\n            openModal(popupDeleteCard);\n          },\n          onLike: handleLike,\n          onImageClick: ({ name, link }) => {\n            popupImageEl.src = link;\n            popupImageEl.alt = name;\n            popupCaption.textContent = name;\n            openModal(popupImage);\n          },\n          currentUserId,\n        },\n        cardsContainer,\n        \"append\"\n      );\n    });\n  })\n  .catch(console.error);\n\nbuttonEditProfile.addEventListener(\"click\", () => {\n  inputName.value = profileName.textContent;\n  inputJob.value = profileJob.textContent;\n  clearValidation(formEditProfile, validationSettings);\n  openModal(popupEditProfile);\n});\n\nformEditProfile.addEventListener(\"submit\", handleProfileFormSubmit);\nformAddCard.addEventListener(\"submit\", handleAddCardSubmit);\n\nenableValidation(validationSettings);\n\nconst popupDeleteCard = document.querySelector(\".popup_type_delete-card\");\nconst confirmDeleteButton = popupDeleteCard?.querySelector(\".popup__button\");\n\nif (confirmDeleteButton) {\n  confirmDeleteButton.addEventListener(\"click\", () => {\n    if (cardToDelete) {\n      api\n        .deleteCard(cardToDelete.cardId)\n        .then(() => {\n          cardToDelete.cardElement.remove();\n          closeModal(popupDeleteCard);\n          cardToDelete = null;\n        })\n        .catch(console.error);\n    }\n  });\n}\n\nconst avatarPopup = document.querySelector(\".popup_type_edit-avatar\");\nconst avatarForm = document.forms[\"edit-avatar\"];\nconst avatarInput = avatarForm.elements[\"avatar\"];\nconst profileImage = document.querySelector(\".profile__image\");\n\nprofileImage.addEventListener(\"click\", () => {\n  avatarForm.reset();\n  clearValidation(avatarForm, validationSettings);\n  openModal(avatarPopup);\n});\n\nfunction handleAvatarFormSubmit(evt) {\n  function makeRequest() {\n    return api.updateAvatar({ avatar: avatarInput.value }).then((userData) => {\n      profileImage.style.backgroundImage = `url('${userData.avatar}')`;\n      closeModal(avatarPopup);\n    });\n  }\n  handleSubmit(makeRequest, evt);\n}\navatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n"],"names":["openModal","popupElement","classList","add","setTimeout","document","addEventListener","onEscapeKey","onOverlayClick","closeModal","remove","removeEventListener","event","key","activePopup","querySelector","target","contains","cardTemplateElement","content","createCard","data","_ref","onDelete","onLike","onImageClick","currentUserId","cardElement","cloneNode","imageElement","titleElement","likeButton","likeCount","deleteButton","textContent","name","src","link","alt","likes","length","some","user","_id","owner","style","display","validationSettings","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","toggleButtonState","inputList","buttonElement","hasInvalidInput","validity","valid","disabled","toggle","clearValidation","Array","from","querySelectorAll","forEach","checkResponse","res","ok","json","Promise","reject","status","request","endpoint","options","fetch","then","Api","headers","_classCallCheck","this","_headers","value","_ref2","about","method","body","JSON","stringify","_ref3","cardId","_ref4","avatar","authorization","renderLoading","isLoading","button","buttonText","arguments","undefined","loadingText","handleSubmit","evt","preventDefault","submitButton","submitter","initialText","reset","catch","console","error","finally","renderCard","item","callbacks","container","buttonEditProfile","popupEditProfile","formEditProfile","forms","inputName","elements","inputJob","profileName","profileJob","buttonAddCard","popupAddCard","formAddCard","popupImage","popupImageEl","popupCaption","cardsContainer","btn","popup","closest","cardToDelete","handleLike","isLiked","api","unlikeCard","likeCard","call","updatedCard","all","getUserInfo","getInitialCards","userData","cards","profileImage","backgroundImage","cardData","popupDeleteCard","updateUserInfo","addCard","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","confirmDeleteButton","deleteCard","avatarPopup","avatarForm","avatarInput","updateAvatar"],"sourceRoot":""}